# Copyright 2016 Cheng Zhao. All rights reserved.
# Use of this source code is governed by the license that can be found in the
# LICENSE file.

import("//testing/test.gni")

# Independent lua executable with yue runtime.
executable("yue_runtime") {
  sources = [
    "main.cc",
  ]
  deps = [
    ":lua_yue_lib",
  ]
}

# Component used for constructing a lua environment with yue inside.
source_set("lua_yue_lib") {
  sources = [
    "builtin_loader.cc",
    "builtin_loader.h",
  ]

  deps = [
    ":lua_yue_gui",
    ":lua_yue_util",
    "//third_party/lua",
  ]
}

# Loadable module of core yue libraries to be used with other lua distributions,
# currently we only build bindings to GUI part of yue.
loadable_module("lua_yue") {
  output_name = "yue"
  output_prefix_override = true  # do not add "lib" prefix

  deps = [
    ":lua_yue_gui",
  ]

  if (is_mac) {
    ldflags = [
      "-undefined", "dynamic_lookup",
    ]
  } else if (is_linux && is_component_build) {
    configs += [ "//build/config/gcc:rpath_for_built_shared_libraries" ]
  } else if (is_win) {
    deps += [
      "//third_party/lua:lua_shared",
    ]
  }
}

# Lua bindings of yue's GUI part.
source_set("lua_yue_gui") {
  sources = [
    "binding_gui.cc",
    "binding_gui.h",
    "binding_signal.h",
    "binding_values.cc",
    "binding_values.h",
  ]

  deps = [
    "//base",
    "//lua",
    "//nativeui",
  ]
}

# Lua bindings of lua-only utilities.
source_set("lua_yue_util") {
  sources = [
    "binding_sys.cc",
    "binding_sys.h",
    "binding_util.cc",
    "binding_util.h",
  ]

  deps = [
    "//base",
    "//lua",
  ]
}

test("lua_yue_unittests") {
  sources = [
    "binding_signal_unittest.cc",
    "binding_values_unittest.cc",
    "test/run_all_unittests.cc",
  ]

  deps = [
    ":lua_yue_lib",
    "//nativeui",
    "//base",
    "//testing/gtest",
  ]
}
